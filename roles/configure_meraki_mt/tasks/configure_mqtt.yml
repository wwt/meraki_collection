---
- name: Query for existing MQTT brokers
  block:
    - name: Query for existing MQTT brokers on Network {{ meraki_mt_configuration.network.name }}
      ansible.builtin.uri:
        url: "{{ dashboard_base_url }}/networks/{{ network_id }}/mqttBrokers"
        method: GET
        status_code: 200
        headers:
          Content-Type: application/json
          Accept: application/json
          X-Cisco-Meraki-API-Key: "{{ auth_key }}"
      until: broker_result.status != 429
      delay: 5
      retries: 3
      register: broker_result
      when: meraki_mt_configuration is defined
  rescue:
    - name: Something went wrong...
      ansible.builtin.debug:
        msg: "ERROR: {{ broker_result }}"

- name: Add discovered brokers to dict
  ansible.builtin.set_fact:
    mqtt_broker_ids: >-
      {{ mqtt_broker_ids | default({}) | combine(
        {
          result.name: {
            "id": result.id,
          }
        }
      ) }}
  loop: "{{ broker_result.json }}"
  loop_control:
    loop_var: result
  when: broker_result.status == 200

- name: Configure MQTT Brokers
  cisco.meraki.networks_mqtt_brokers:
    meraki_api_key: "{{ auth_key }}"
    networkId: "{{ network_id }}"
    name: "{{ broker.name }}"
    authentication: "{{ broker.authentication }}"
    host: "{{ broker.host }}"
    port: "{{ broker.port }}"
    security:
      mode: "{{ broker.security.mode }}"
      tls:
        caCertificate: "{{ lookup('ansible.builtin.file', broker.security.certFile) }}"
        verifyHostnames: "{{ broker.security.verifyHostnames }}"
  loop: "{{ meraki_mt_configuration.mqtt_brokers | list }}"
  loop_control:
    loop_var: broker
  when: broker.state == "present" and mqtt_broker_ids[broker.name] is not defined
  register: broker_result

- name: Add newly created broker to dict
  ansible.builtin.set_fact:
    mqtt_broker_ids: >-
      {{ mqtt_broker_ids | default({}) | combine(
      {
        result.meraki_response.name: {
          "id": result.meraki_response.id,
        }
      }
      ) }}
  loop: "{{ broker_result.results }}"
  loop_control:
    loop_var: result
  when: not result.skipped

- name: Enable MQTT Brokers
  cisco.meraki.networks_sensor_mqtt_brokers:
    meraki_api_key: "{{ auth_key }}"
    networkId: "{{ network_id }}"
    state: "{{ broker.state }}"
    enabled: "{{ broker.enabled }}"
    mqttBrokerId: "{{ mqtt_broker_ids[broker.name].id }}"
  loop: "{{ meraki_mt_configuration.mqtt_brokers | list }}"
  loop_control:
    loop_var: broker
  when: broker.state == "present" and broker.enabled

- name: Delete MQTT Broker
  block:
    - name: Disable MQTT Broker before deletion
      cisco.meraki.networks_sensor_mqtt_brokers:
        meraki_api_key: "{{ auth_key }}"
        networkId: "{{ network_id }}"
        state: present
        enabled: false
        mqttBrokerId: "{{ mqtt_broker_ids[broker.name].id }}"
      loop: "{{ meraki_mt_configuration.mqtt_brokers | list }}"
      loop_control:
        loop_var: broker
      when: mqtt_broker_ids[broker.name] is defined and broker.state == "absent"

    - name: Deleting MQTT Broker for Network {{ meraki_mt_configuration.network.name }}
      ansible.builtin.uri:
        url: "{{ dashboard_base_url }}/networks/{{ network_id }}/mqttBrokers/{{ mqtt_broker_ids[broker.name].id }}"
        method: DELETE
        status_code: 204
        headers:
          Content-Type: application/json
          Accept: application/json
          X-Cisco-Meraki-API-Key: "{{ auth_key }}"
      changed_when: delete_broker_result.status == 204
      until: delete_broker_result.status != 429
      delay: 5
      retries: 3
      register: delete_broker_result
      when: mqtt_broker_ids[broker.name] is defined and broker.state == "absent"
      loop: "{{ meraki_mt_configuration.mqtt_brokers }}"
      loop_control:
        loop_var: broker
  rescue:
    - name: Something went wrong...
      ansible.builtin.debug:
        msg: "ERROR: {{ delete_broker_result }}"
