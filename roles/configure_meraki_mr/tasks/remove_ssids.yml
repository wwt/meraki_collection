---
- name: Check for Existing SSIDs
  cisco.meraki.networks_wireless_ssids_info:
    meraki_api_key: "{{ auth_key }}"
    networkId: "{{ lookup('wwt.meraki.fetch', 'network_id', org_name=meraki_mr_configuration.network.organization, meraki_api_key=auth_key, network_name=meraki_mr_configuration.network.name) }}"
  register: ssid_results

- name: Parse SSID Data
  ansible.builtin.set_fact:
    ssid_data: >-
      {{ ssid_data | default({}) | combine(
        {
          response.name: {
            "number": response.number,
            "enabled": response.enabled
          }
        }
      ) }}
  loop: "{{ ssid_results.meraki_response }}"
  loop_control:
    loop_var: response
  when: ssid_results.meraki_response is defined

- name: Remove and Disable SSIDs
  cisco.meraki.networks_wireless_ssids:
    meraki_api_key: "{{ auth_key }}"
    state: present
    name: "{{ 'Unconfigured SSID ' + ((ssid_data[ssid.name].number | int + 1) | string) }}"
    number: "{{ ssid.number }}"
    enabled: false
    networkId: "{{ lookup('wwt.meraki.fetch', 'network_id', org_name=meraki_mr_configuration.network.organization, meraki_api_key=auth_key, network_name=meraki_mr_configuration.network.name) }}"
  loop: "{{ meraki_mr_configuration.ssids }}"
  loop_control:
    loop_var: ssid
  when: ssid.state == "absent" and ssid_data[ssid.name] is defined
