---
- name: Configure RF Profiles
  block:
    - name: Querying for existing RF Profiles
      cisco.meraki.networks_wireless_rf_profiles_info:
        meraki_api_key: "{{ auth_key }}"
        networkId: "{{ network_id }}"
      register: profile_results
  rescue:
    - name: Something went wrong...
      ansible.builtin.debug:
        msg: "ERROR: {{ profile_results.msg }}"

- name: Build dict of RF Profile Names to IDs
  ansible.builtin.set_fact:
    rf_profile_ids: >-
      {{ rf_profile_ids | default({}) | combine(
        {
          result.name: {
            "id": result.id,
          }
        }
      ) }}
  loop: "{{ profile_results.meraki_response }}"
  loop_control:
    loop_var: result
  when: profile_results.meraki_response is defined

- name: Creating RF Profiles
  cisco.meraki.networks_wireless_rf_profiles:
    meraki_api_key: "{{ auth_key }}"
    state: "{{ profile.state }}"
    name: "{{ profile.name }}"
    networkId: "{{ network_id }}"
    bandSelectionType: "{{ profile.bandSelectionType | default(omit) }}"
    clientBalancingEnabled: "{{ profile.clientBalancingEnabled | default(omit) }}"
    apBandSettings: "{{ profile.apBandSettings | default(omit) }}"
    twoFourGhzSettings: "{{ profile.twoFourGhzSettings | default(omit) }}"
    fiveGhzSettings: "{{ profile.fiveGhzSettings | default(omit) }}"
    sixGhzSettings: "{{ profile.sixGhzSettings | default(omit) }}"
    transmission: "{{ profile.transmission | default(omit) }}"
    flexRadios: "{{ profile.flexRadios | default(omit) }}"
    perSsidSettings: "{{ profile.perSsidSettings | default(omit) }}"
  loop: "{{ ap.rfProfiles }}"
  loop_control:
    loop_var: profile
  when: rf_profile_ids[profile.name] is undefined and profile.state == "present"
  register: rf_profile_output

- name: Add newly created RF profile to dict
  ansible.builtin.set_fact:
    rf_profile_ids: >-
      {{ rf_profile_ids | default({}) | combine(
        {
          result.meraki_response.name: {
            "id": result.meraki_response.id,
          }
        }
      ) }}
  loop: "{{ rf_profile_output.results }}"
  loop_control:
    loop_var: result
  when: not rf_profile_output.skipped

- name: Updating RF Profiles
  cisco.meraki.networks_wireless_rf_profiles:
    meraki_api_key: "{{ auth_key }}"
    state: "{{ profile.state }}"
    name: "{{ profile.name }}"
    networkId: "{{ network_id }}"
    rfProfileId: "{{ rf_profile_ids[profile.name].id }}"
    bandSelectionType: "{{ profile.bandSelectionType | default(omit) }}"
    clientBalancingEnabled: "{{ profile.clientBalancingEnabled | default(omit) }}"
    apBandSettings: "{{ profile.apBandSettings | default(omit) }}"
    twoFourGhzSettings: "{{ profile.twoFourGhzSettings | default(omit) }}"
    fiveGhzSettings: "{{ profile.fiveGhzSettings | default(omit) }}"
    sixGhzSettings: "{{ profile.sixGhzSettings | default(omit) }}"
    transmission: "{{ profile.transmission | default(omit) }}"
    flexRadios: "{{ profile.flexRadios | default(omit) }}"
    perSsidSettings: "{{ profile.perSsidSettings | default(omit) }}"
  loop: "{{ ap.rfProfiles }}"
  loop_control:
    loop_var: profile
  when: rf_profile_ids[profile.name] is defined and profile.state == "present"

- name: Removing RF Profiles
  cisco.meraki.networks_wireless_rf_profiles:
    meraki_api_key: "{{ auth_key }}"
    state: "{{ profile.state }}"
    networkId: "{{ network_id }}"
    rfProfileId: "{{ rf_profile_ids[profile.name].id }}"
  loop: "{{ ap.rfProfiles }}"
  loop_control:
    loop_var: profile
  when: rf_profile_ids[profile.name] is defined and profile.state == "absent"
