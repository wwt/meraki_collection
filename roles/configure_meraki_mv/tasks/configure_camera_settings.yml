---
- name: Query Device Serial Number for {{ camera.name }}
  ansible.builtin.set_fact:
    device_serial: "{{ lookup('wwt.meraki.fetch',
      'network_devices',
      org_name=meraki_mv_configuration.network.organization,
      meraki_api_key=auth_key,
      network_name=meraki_mv_configuration.network.name,
      device_name=camera.name) }}"

- name: Query for existing Camera Quality and Retention Profiles
  cisco.meraki.networks_camera_quality_retention_profiles_info:
    meraki_api_key: "{{ auth_key }}"
    networkId: "{{ network_id }}"
  register: profile_result
  when: meraki_mv_configuration.camera_profiles.quality_and_retention is defined

- name: Add discovered profiles to dict
  ansible.builtin.set_fact:
    quality_profile_ids: >-
      {{ quality_profile_ids | default({}) | combine(
        {
          result.name: {
            "id": result.id,
          }
        }
      ) }}
  loop: "{{ profile_result.meraki_response }}"
  loop_control:
    loop_var: result
  when: profile_result is defined

- name: Configure Camera Quality and Retention Settings for {{ camera.name }}
  cisco.meraki.devices_camera_quality_and_retention:
    meraki_api_key: "{{ auth_key }}"
    state: "{{ camera.state }}"
    serial: "{{ device_serial }}"
    profileId: "{{ quality_profile_ids[camera.camera_profiles.quality_and_retention.name].id | default(omit) }}"
    audioRecordingEnabled: "{{ camera.quality_and_retention_settings.audioRecordingEnabled | default(omit) }}"
    motionBasedRetentionEnabled: "{{ camera.quality_and_retention_settings.motionBasedRetentionEnabled | default(omit) }}"
    motionDetectorVersion: "{{ camera.quality_and_retention_settings.motionDetectorVersion | default(omit) }}"
    restrictedBandwidthModeEnabled: "{{ camera.quality_and_retention_settings.restrictedBandwidthModeEnabled | default(omit) }}"
    quality: "{{ camera.quality_and_retention_settings.quality | default(omit) }}"
    resolution: "{{ camera.quality_and_retention_settings.resolution | default(omit) }}"
  when: (camera.camera_profiles.quality_and_retention is defined) or (camera.quality_and_retention_settings is defined)

- name: Query for existing Camera Wireless Profiles
  cisco.meraki.networks_camera_wireless_profiles_info:
    meraki_api_key: "{{ auth_key }}"
    networkId: "{{ network_id }}"
  register: profile_result
  when: meraki_mv_configuration.camera_profiles.wireless is defined

- name: Add discovered profiles to dict
  ansible.builtin.set_fact:
    wireless_profile_ids: >-
      {{ wireless_profile_ids | default({}) | combine(
        {
          result.name: {
            "id": result.id,
          }
        }
      ) }}
  loop: "{{ profile_result.meraki_response }}"
  loop_control:
    loop_var: result
  when: profile_result is defined

- name: Configure Camera Wireless Profiles for {{ camera.name }}
  cisco.meraki.devices_camera_wireless_profiles:
    meraki_api_key: "{{ auth_key }}"
    state: "{{ camera.state }}"
    serial: "{{ device_serial }}"
    ids:
      primary: "{{ camera.camera_profiles.wireless['primary'] is defined
        | ternary(wireless_profile_ids[camera.camera_profiles.wireless.get('primary')].id, omit) }}"
      secondary: "{{ camera.camera_profiles.wireless['secondary'] is defined
        | ternary(wireless_profile_ids[camera.camera_profiles.wireless.get('secondary')].id, omit) }}"
      backup: "{{ camera.camera_profiles.wireless['backup'] is defined
        | ternary(wireless_profile_ids[camera.camera_profiles.wireless.get('backup')].id, omit) }}"
  when: camera.camera_profiles.wireless is defined

- name: Query for existing MQTT brokers
  block:
    - name: Query for existing MQTT brokers on Network {{ meraki_mv_configuration.network.name }}
      ansible.builtin.uri:
        url: "{{ dashboard_base_url }}/networks/{{ network_id }}/mqttBrokers"
        method: GET
        status_code: 200
        headers:
          Content-Type: application/json
          Accept: application/json
          X-Cisco-Meraki-API-Key: "{{ auth_key }}"
      until: broker_result.status != 429
      delay: 5
      retries: 3
      register: broker_result
      when: meraki_mt_configuration is defined
  rescue:
    - name: Something went wrong...
      ansible.builtin.debug:
        msg: "ERROR: {{ broker_result }}"

- name: Add discovered brokers to dict
  ansible.builtin.set_fact:
    mqtt_broker_ids: >-
      {{ mqtt_broker_ids | default({}) | combine(
        {
          result.name: {
            "id": result.id,
          }
        }
      ) }}
  loop: "{{ broker_result.json }}"
  loop_control:
    loop_var: result
  when: broker_result.status == 200

- name: Configure Camera Sense Settings for {{ camera.name }}
  cisco.meraki.devices_camera_sense:
    meraki_api_key: "{{ auth_key }}"
    serial: "{{ device_serial }}"
    state: "{{ camera.state }}"
    senseEnabled: "{{ camera.sense.senseEnabled | default(omit) }}"
    mqttBrokerId: '{{ camera.sense["mqttBrokerName"] is defined
        | ternary(mqtt_broker_ids[camera.sense.get("mqttBrokerName")].id, omit) }}'
    audioDetection: "{{ ((camera.sense.audioDetection is defined)
      and (camera.sense.audioDetection.enabled)
      and (camera.sense.senseEnabled))
      | ternary(camera.sense.audioDetection.enabled, omit) }}"
  when: camera.sense.senseEnabled is defined and camera.state == "present"
